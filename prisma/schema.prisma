generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  IN
  OUT
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String? @unique
  password String
  role     String
  phone    String?

  roles              UserRole[]
  stock_transactions StockTransaction[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("users")
}

model Role {
  id        Int    @id @default(autoincrement())
  role_name String @unique

  users UserRole[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("roles")
}

model UserRole {
  user    User @relation(fields: [user_id], references: [id])
  user_id Int

  role    Role @relation(fields: [role_id], references: [id])
  role_id Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@id([user_id, role_id])
  @@map("users_roles")
}

model Good {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  quantity    Int
  price       Int

  stock_transactions StockTransaction[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("goods")
}

model StockTransaction {
  id Int @id @default(autoincrement())

  user    User? @relation(fields: [user_id], references: [id])
  user_id Int?

  good    Good? @relation(fields: [good_id], references: [id])
  good_id Int?

  transaction_type TransactionType

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("stock_transactions")
}
